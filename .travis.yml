language: rust
sudo: false
# necessary for `travis-cargo coveralls --no-sudo`
addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - binutils-dev # optional: only required for the --verify flag of coveralls
cache: cargo

rust:
  - stable


# load travis-cargo
before_script:
  - pip install 'travis-cargo<0.2' --user
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then export PATH=$HOME/.local/bin:$PATH; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then export PATH=$HOME/Library/Python/2.7/bin:$PATH; fi
  # Install OpenSSL through homebrew
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then brew update && brew install openssl; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then export OPENSSL_INCLUDE_DIR=`brew --prefix openssl`/include; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then export OPENSSL_LIB_DIR=`brew --prefix openssl`/lib; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]];   then export DEP_OPENSSL_INCLUDE=`brew --prefix openssl`/include; fi


# the main build
script:
  # upload the documentation from the build with stable (automatically only actually
  # runs on the master branch, not individual PRs)
  # - travis-cargo --only stable doc-upload
  # measure code coverage and upload to coveralls.io (the verify
  # argument mitigates kcov crashes due to malformed debuginfo, at the
  # cost of some speed <https://github.com/huonw/travis-cargo/issues/12>)
  # https://github.com/huonw/travis-cargo/issues/58
  # See https://github.com/ujh/iomrascalai/blob/master/.travis.yml
  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$TRAVIS_RUST_VERSION" == "stable" ]]; then travis-cargo coveralls --no-sudo --verify; fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$TRAVIS_RUST_VERSION" == "stable" ]]; then ./kcov/build/src/kcov --verify --coveralls-id=$TRAVIS_JOB_ID --exclude-pattern='/.cargo,target' target/kcov target/debug/gitlab_api-*; fi
  # Upload to codecov.io too
  - if [[ "$TRAVIS_OS_NAME" == "linux" && "$TRAVIS_RUST_VERSION" == "stable" ]]; then bash <(curl -s https://codecov.io/bash); fi
